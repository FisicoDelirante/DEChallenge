"""Redefine schema

Revision ID: 6325b95e1064
Revises: 517306f2c17b
Create Date: 2025-03-03 23:11:34.087467

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "6325b95e1064"
down_revision: Union[str, None] = "517306f2c17b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("songs_album_id_fkey", "songs", type_="foreignkey")
    op.drop_constraint("songs_audio_feature_id_fkey", "songs", type_="foreignkey")
    op.drop_constraint("songs_genre_id_fkey", "songs", type_="foreignkey")
    op.drop_constraint("songs_artist_id_fkey", "songs", type_="foreignkey")
    op.drop_constraint("genres_name_key", "genres", type_="unique")
    op.drop_column("albums", "id")
    op.drop_column("artists", "id")
    op.drop_column("audio_features", "id")
    op.drop_column("genres", "id")
    op.drop_column("songs", "id")
    op.drop_column("songs", "lyrics")
    op.drop_column("songs", "album_id")
    op.drop_column("songs", "audio_feature_id")
    op.drop_column("songs", "artist_id")
    op.drop_column("songs", "genre_id")
    op.drop_column("songs", "duration")

    op.add_column("audio_features", sa.Column("title", sa.String(), nullable=False))
    op.add_column("audio_features", sa.Column("duration", sa.Float(), nullable=True))
    op.add_column("songs", sa.Column("artist_name", sa.String(), nullable=True))
    op.add_column("songs", sa.Column("album_name", sa.String(), nullable=True))
    op.add_column("songs", sa.Column("genre_name", sa.String(), nullable=True))

    op.create_primary_key("songs_pk", "songs", ["title"])
    op.create_primary_key("albums_pk", "albums", ["name"])
    op.create_primary_key("artists_pk", "artists", ["name"])
    op.create_primary_key("genres_pk", "genres", ["name"])
    op.create_foreign_key(None, "audio_features", "songs", ["title"], ["title"])
    op.create_foreign_key(None, "songs", "artists", ["artist_name"], ["name"])
    op.create_foreign_key(None, "songs", "genres", ["genre_name"], ["name"])
    op.create_foreign_key(None, "songs", "albums", ["album_name"], ["name"])

    op.create_table(
        "lyrics",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("lyrics", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["title"],
            ["songs.title"],
        ),
        sa.PrimaryKeyConstraint("title"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "songs",
        sa.Column(
            "duration",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "songs", sa.Column("genre_id", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "songs",
        sa.Column("artist_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "songs",
        sa.Column("audio_feature_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "songs", sa.Column("album_id", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "songs", sa.Column("lyrics", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "songs", sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False)
    )
    op.drop_constraint(None, "songs", type_="foreignkey")
    op.drop_constraint(None, "songs", type_="foreignkey")
    op.drop_constraint(None, "songs", type_="foreignkey")
    op.create_foreign_key(
        "songs_artist_id_fkey", "songs", "artists", ["artist_id"], ["id"]
    )
    op.create_foreign_key(
        "songs_genre_id_fkey", "songs", "genres", ["genre_id"], ["id"]
    )
    op.create_foreign_key(
        "songs_audio_feature_id_fkey",
        "songs",
        "audio_features",
        ["audio_feature_id"],
        ["id"],
    )
    op.create_foreign_key(
        "songs_album_id_fkey", "songs", "albums", ["album_id"], ["id"]
    )
    op.drop_column("songs", "genre_name")
    op.drop_column("songs", "album_name")
    op.drop_column("songs", "artist_name")
    op.add_column(
        "genres", sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False)
    )
    op.create_unique_constraint("genres_name_key", "genres", ["name"])
    op.add_column(
        "audio_features",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
    )
    op.drop_constraint(None, "audio_features", type_="foreignkey")
    op.drop_column("audio_features", "duration")
    op.drop_column("audio_features", "title")
    op.add_column(
        "artists",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('artists_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
    )
    op.add_column(
        "albums",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('albums_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
    )
    op.drop_table("lyrics")
    # ### end Alembic commands ###
